<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Shell on ha0zi 的分享</title>
    <link>https://www.ha0zi.com/tags/shell/</link>
    <description>Recent content in Shell on ha0zi 的分享</description>
    <image>
      <title>ha0zi 的分享</title>
      <url>https://www.ha0zi.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.ha0zi.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.125.4</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Dec 2019 20:40:09 +0800</lastBuildDate>
    <atom:link href="https://www.ha0zi.com/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shell(md5sum\sha1sum\sha256sum) 编程杂记</title>
      <link>https://www.ha0zi.com/post/study-notes/linux/191205-shell-get_md5-customize/</link>
      <pubDate>Thu, 05 Dec 2019 20:40:09 +0800</pubDate>
      <guid>https://www.ha0zi.com/post/study-notes/linux/191205-shell-get_md5-customize/</guid>
      <description>发现三个 Shell 命令 md5sum、sha1sum、sha256sum，发现用于文件下载辨别还是很有用处的。网络上充斥着许许多多魔改的程序，有些改动可能是善意、玩闹的，同时也包含一些改动是恶意的！我们无法保证所下载的资源没有被修改，更不敢保证他们都没有恶意。因此可以使用 md5 、 sha1、sha256 等一系列密码散列函数进行验证。 这里我们不过多的介绍 Shell 命令的具体使用方法，感兴趣的朋友可以自行搜索或者* -help。预期的效果类似与 mkdir -p /opt/demo/demo 简单的花了半个小时进行查找资料发现了有三种方式可以在执行命令的时候动态的改变参数。
在执行 Shell 脚本的后面直接添加字符，例如创建一个&amp;rsquo;demo.sh&#39; #!/bin/bash echo $1 echo $2$3 $ chmod +x demo.sh $ ./demo.sh $ ./demo.sh 4 5 6 4 56 $ ./demo.sh 14 5 14 5 $ ./demo.sh 14 14 $ ./demo.sh 14 4 14 14 14 414 使用 getopts 命令（获知途径） #!/bin/bash while getopts &amp;#34;:a:b:c:&amp;#34; opt do case $opt in a) echo &amp;#34;参数a的值$OPTARG&amp;#34; ;; b) echo &amp;#34;参数b的值$OPTARG&amp;#34; ;; c) echo &amp;#34;参数c的值$OPTARG&amp;#34; ;; ?</description>
    </item>
    <item>
      <title>Shell(md5sum\sha1sum\sha256sum) 编程杂记</title>
      <link>https://www.ha0zi.com/study-notes/linux/191205-shell-get_md5-customize/</link>
      <pubDate>Thu, 05 Dec 2019 20:40:09 +0800</pubDate>
      <guid>https://www.ha0zi.com/study-notes/linux/191205-shell-get_md5-customize/</guid>
      <description>发现三个 Shell 命令 md5sum、sha1sum、sha256sum，发现用于文件下载辨别还是很有用处的。网络上充斥着许许多多魔改的程序，有些改动可能是善意、玩闹的，同时也包含一些改动是恶意的！我们无法保证所下载的资源没有被修改，更不敢保证他们都没有恶意。因此可以使用 md5 、 sha1、sha256 等一系列密码散列函数进行验证。 这里我们不过多的介绍 Shell 命令的具体使用方法，感兴趣的朋友可以自行搜索或者* -help。预期的效果类似与 mkdir -p /opt/demo/demo 简单的花了半个小时进行查找资料发现了有三种方式可以在执行命令的时候动态的改变参数。
在执行 Shell 脚本的后面直接添加字符，例如创建一个&amp;rsquo;demo.sh&#39; #!/bin/bash echo $1 echo $2$3 $ chmod +x demo.sh $ ./demo.sh $ ./demo.sh 4 5 6 4 56 $ ./demo.sh 14 5 14 5 $ ./demo.sh 14 14 $ ./demo.sh 14 4 14 14 14 414 使用 getopts 命令（获知途径） #!/bin/bash while getopts &amp;#34;:a:b:c:&amp;#34; opt do case $opt in a) echo &amp;#34;参数a的值$OPTARG&amp;#34; ;; b) echo &amp;#34;参数b的值$OPTARG&amp;#34; ;; c) echo &amp;#34;参数c的值$OPTARG&amp;#34; ;; ?</description>
    </item>
  </channel>
</rss>
